@using WebGui.Services
@inject UserService UserService
@inject NavigationManager NavManager

<MudNavMenu Dense="false" Bordered="false" Rounded="true">
    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home" IconColor="Color.Tertiary" Href="/">
        <MudText Color="Color.Tertiary" Typo="Typo.body1">Home</MudText>
    </MudNavLink>
    @if (_logedIn) {
        <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.LibraryBooks" IconColor="Color.Tertiary" Href="/books/1/sections/1">
            <MudText Color="Color.Tertiary" Typo="Typo.body1">Sections</MudText>
        </MudNavLink>
        <MudNavLink Icon="@Icons.Material.Filled.Logout" IconColor="Color.Tertiary" OnClick="Logout">
            <MudText Color="Color.Tertiary" Typo="Typo.body1">Logout</MudText>
        </MudNavLink>
    }
    else {
        <MudNavLink Icon="@Icons.Material.Filled.Login" IconColor="Color.Tertiary" OnClick="Login">
            <MudText Color="Color.Tertiary" Typo="Typo.body1">Login</MudText>
        </MudNavLink>
    }
</MudNavMenu>

@code {
    protected override void OnInitialized() {
        UserService.RegisterMethodForLoginStateChangeEvent(SwitchMode);
    }

    private bool _logedIn = false;
    
    private bool SwitchMode() {
        if (UserService.CurrentUser is not null) {
            _logedIn = true;
        }
        else {
            _logedIn = false;
        }
        StateHasChanged();
        return _logedIn;
    }
    
    private async Task Logout() {
        await UserService.LogoutAsync();
        NavManager.NavigateTo($"/");
    }
    private void Login() {
        NavManager.NavigateTo($"/auth");
    }

}