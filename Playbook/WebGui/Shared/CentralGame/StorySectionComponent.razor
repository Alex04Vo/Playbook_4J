@using Model.Entities.Sections.StorySections
@using System.ComponentModel.DataAnnotations
@using WebGui.Services
@inject NavigationManager NavManager
@inject SessionService SessionService

<MudCard>
    <MudCardHeader>
        <MudText Color="Color.Primary" Typo="Typo.h5">@Section.Book.Title - @Section.SectionNumber</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudText Typo="Typo.body1">@Section.Content</MudText>
        <br/>
        <MudDivider/>
        <br/>
        @foreach (var outcome in Section.Outcomes) {
            <div>
                <MudButton Color="Color.Primary" Variant="Variant.Outlined" Class="m-2 w-100" OnClick="() => NavToOutcome(outcome.Section)">
                    @outcome.Content - @outcome.Section.SectionNumber
                </MudButton>
            </div>
        }
    </MudCardContent>
</MudCard>

@code {

    [Parameter, Required]
    public StorySection Section { get; set; } = new();

    private async Task NavToOutcome(StorySection goalSection) {
        await SessionService.SaveChoosenSection(Section.BookId, Section.Id, goalSection.Id);
        NavManager.NavigateTo($"/s/{SessionService.CurrentSession!.Id}/books/{Section.BookId}/sections/{goalSection.SectionNumber}");
    }
}