@using Model.Entities.Heroes.Inventories
@using System.ComponentModel.DataAnnotations
@using Domain.Repositories.Interfaces
@using WebGui.Services
@inject SessionService SessionService
@inject IHeroRepository HeroRepository
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>

        <div class="container-md">
            @foreach (var weapon in Weapons) {
                <div>
                    <MudButton Color="Color.Primary" Variant="Variant.Outlined"
                               Class="m-2 w-100" OnClick="() => DropWeaponAsync(weapon)">
                       @weapon.Item.Name
                    </MudButton>
                </div>
            }
        </div>

    </DialogContent>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter, Required]
    public List<InventoryItem> Weapons { get; set; } = new();

    void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private async Task DropWeaponAsync(InventoryItem weapon) {
        if (SessionService.CurrentSession is not null) {
            SessionService.CurrentSession.Hero.Inventory.Items.Remove(weapon);
            await HeroRepository.UpdateAsync(SessionService.CurrentSession.Hero);
            Snackbar.Add($"You have lost your {weapon.Item.Name}!", Severity.Warning);
        }
       
    }
}